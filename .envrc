# shellcheck disable=SC2148,SC2155,SC1091

# Create directories for secrets and screenshots
mkdir -p .secrets reports/screenshots

#
# Add node_modules/.bin to PATH
#
PATH_add node_modules/.bin
#
# Obsidian Local REST API configuration
#
export API_KEY=$(cat .secrets/obsidian_local_rest_api_key)
#
# Set up Linux-specific aliases for project (WSL2 configuration)
#
if [[ "$(uname -s)" == "Linux" ]]; then
  # variable exusts only on WSL2 but not on Linux itself
  if [[ -n "$WSL_DISTRO_NAME" ]]; then
    #
    # Get the gateway IP for default route
    #
    export WSL_GATEWAY_IP=$(ip route show | grep -i default | awk '{ print $3}')
    #
    # Set API_HOST, point to Windows 11 host machine
    #
    export API_HOST="https://$WSL_GATEWAY_IP"
  fi
fi
#
# Check write access and ownership for each directory
#
echo "Verify write access and ownership for Dockerized Obsidian directory:"
source "$(pwd)/dockerize/ci_verify_permissions.sh"
#
# Configure screenshot scripts. Keep startup delay short, 1 sec
#
export SCR_INITIAL_DELAY_SECONDS=1
#
# Brave Search API key
#
export BRAVE_API_KEY=$(cat .secrets/brave_search_api_key)
#
# NPM Auth Token, https://github.com/settings/tokens
# Create 'classic' token with 'read:packages' scope
#
export NPM_TOKEN=$(cat .secrets/github_read_packages_token)
#
# NPM Registry URL for publishing
#
export NPM_REGISTRY_URL="https://npm.pkg.github.com"
#
# ref: https://www.npmjs.com/settings/oleksandrkucherenko/tokens/
#
export NPM_PUBLISH_TOKEN=$(cat .secrets/npm_registry_publish_token)
#
# Obtain a personal access token (release-it only needs "repo" access; no "admin" or other scopes).
#
export GITHUB_TOKEN=$(cat .secrets/github_token)
#
# Set default git pager
#
export GIT_PAGER="cat"
#
# Set default release level
#
export RELEASE_LEVEL=${RELEASE_LEVEL:-patch}

#
# TestContainers Configuration
#
#export TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE="/var/run/docker.sock"
#export DOCKER_HOST=""
export TESTCONTAINERS_RYUK_DISABLED="true"
#
# Docker platform configuration
#
export DOCKER_DEFAULT_PLATFORM=linux/amd64
