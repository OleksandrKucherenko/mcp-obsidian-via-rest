name: Publish Docker Images

on:
  push:
    branches: [main]
    tags: ["v*"]
    paths:
      - 'src/*'
      - 'dockerize/*'
      - '.github/*'
      - '.github/workflows/*'
      - '.dockerignore'
      - 'Dockerfile'
      - 'package.json'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (optional)'
        required: false
        type: string

jobs:
  build-vnc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase repository name
        id: repo_name
        run: |
          # Extract owner and repo name
          echo "owner=$(echo ${GITHUB_REPOSITORY} | cut -d '/' -f 1 | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "repo_simple=$(echo ${GITHUB_REPOSITORY} | cut -d '/' -f 2 | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker (VNC Obsidian)
        id: metaVnc
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.repo_name.outputs.owner }}/obsidian-vnc
          flavor: latest=false   # ðŸ‘ˆ Prevents implicit "latest" addition
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,format=short
            type=raw,value=latest
    
      - name: Build and push Docker image (VNC Obsidian)
        uses: docker/build-push-action@v6
        with:
          context: ./dockerize
          file: ./dockerize/Dockerfile
          provenance: false   # ðŸ‘ˆ disables attestation-manifests
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.metaVnc.outputs.tags }}
          labels: ${{ steps.metaVnc.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify Manifest
        run: |
          docker manifest inspect ghcr.io/${{ steps.repo_name.outputs.owner }}/obsidian-vnc:latest
          docker buildx imagetools inspect ghcr.io/${{ steps.repo_name.outputs.owner }}/obsidian-vnc:latest
  
  build-mcp:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase repository name
        id: repo_name
        run: |
          # Extract owner and repo name
          echo "owner=$(echo ${GITHUB_REPOSITORY} | cut -d '/' -f 1 | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "repo_simple=$(echo ${GITHUB_REPOSITORY} | cut -d '/' -f 2 | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker (MCP Obsidian)
        id: metaMcp
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.repo_name.outputs.owner }}/obsidian-mcp
          flavor: latest=false   # ðŸ‘ˆ Prevents implicit "latest" addition
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,format=short
            type=raw,value=latest

      - name: Build and push Docker image (MCP Obsidian)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          provenance: false   # ðŸ‘ˆ disables attestation-manifests
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.metaMcp.outputs.tags }}
          labels: ${{ steps.metaMcp.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify Manifest
        run: |
          docker manifest inspect ghcr.io/${{ steps.repo_name.outputs.owner }}/obsidian-mcp:latest
          docker buildx imagetools inspect ghcr.io/${{ steps.repo_name.outputs.owner }}/obsidian-mcp:latest
