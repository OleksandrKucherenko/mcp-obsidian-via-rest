name: Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

# Allow only one concurrent CI run per branch
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Multi-platform unit testing
  testing-unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-env

      - name: Run Type Checks
        run: |
          bun add --peer typescript
          bun run checks:types

      - name: Run Linting
        run: |
          bun run checks:lint

      - name: Run Knip
        run: |
          bun run checks:knip

      - name: Run Unit Tests
        run: bun run test

      - name: Build Package
        run: bun run build

  # E2E testing with manual Docker management (Linux only)
  testing-e2e-manual:
    needs: [testing-unit]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux-x86
          - os: macos-latest
            platform: macos-arm64
    runs-on: ${{ matrix.os }}
    name: E2E Tests (${{ matrix.os }})
    steps:
      - name: Checkout Code with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-env

      - name: Start Docker Compose for E2E Tests
        id: compose-e2e
        uses: hoverkraft-tech/compose-action@v2.2.0
        with:
          compose-file: ./docker-compose.yaml
          up-flags: "-d"

      - name: Wait for Services
        run: |
          echo "Waiting for services to be ready..."
          sleep 30

      - name: Run E2E Tests (Manual Docker Management)
        env:
          API_KEY: "190ba65d28ac1ba4797cb195bb06f20965395abbd9c39a0fa9b6cab2345c58b9"
        run: |
          echo "Running E2E tests with Docker Compose managed containers"
          DEBUG=* bun run test:e2e

  # Container testing with testcontainers (automated lifecycle)
  testing-containers-automated:
    needs: [testing-unit]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux-x86
          - os: macos-latest
            platform: macos-arm64
    runs-on: ${{ matrix.os }}
    name: TestContainers (${{ matrix.os }})
    steps:
      - name: Checkout Code with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-env

      - name: Run Container Tests (Testcontainers)
        run: |
          echo "Running container tests with testcontainers (automated lifecycle)"
          DEBUG=* bun run test:containers

  # Summary job
  ci-summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [testing-unit, testing-e2e-manual, testing-containers-automated]
    if: always()
    
    steps:
      - name: Check Results
        run: |
          echo "## CI Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.testing-unit.result }}" == "success" ]]; then
            echo "✅ Unit Tests (Multi-Platform): PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Unit Tests (Multi-Platform): FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.testing-e2e-manual.result }}" == "success" ]]; then
            echo "✅ E2E Tests (Manual Docker): PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ E2E Tests (Manual Docker): FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.testing-containers-automated.result }}" == "success" ]]; then
            echo "✅ Container Tests (Testcontainers): PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Container Tests (Testcontainers): FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Types Explanation" >> $GITHUB_STEP_SUMMARY
          echo "- **E2E Tests (Manual Docker)**: Tests that require manual Docker container management" >> $GITHUB_STEP_SUMMARY
          echo "- **Container Tests (Testcontainers)**: Tests using testcontainers library for automated container lifecycle" >> $GITHUB_STEP_SUMMARY
          echo "- **Unit Tests**: Cross-platform unit tests (Linux x86 + macOS Apple Silicon)" >> $GITHUB_STEP_SUMMARY
          
          # Fail the job if any critical tests failed
          if [[ "${{ needs.testing-unit.result }}" != "success" ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "❌ **Critical tests failed!**" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi